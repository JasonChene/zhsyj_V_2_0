<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no, width=device-width">
    <title>网格编辑工具</title>
	<script src="jquery-1.8.1.min.js" type="text/javascript" charset="utf-8"></script>



    <link rel="stylesheet" href="http://cache.amap.com/lbs/static/main1119.css"/>
    <script src="http://webapi.amap.com/maps?v=1.4.6&key=您申请的key值&plugin=AMap.PolyEditor,AMap.CircleEditor"></script>
    <script type="text/javascript" src="http://cache.amap.com/lbs/static/addToolbar.js"></script>
	<script type="text/javascript" src="zhongmou.js" ></script>

<script src="Trank.js" type="text/javascript"></script>
<script src="MapService.js" type="text/javascript"></script>
<script src="mapUil.js" type="text/javascript"></script>
<script src="markSettings.js" type="text/javascript"></script>
	
</head>
<body>
<div id="container"></div>
<div class="button-group">
    <!--<input type="button" class="button" value="开始编辑折线" onClick="editor.startEditLine()"/>
    <input type="button" class="button" value="结束编辑折线" onClick="editor.closeEditLine()"/>-->
    <input type="button" class="button" value="开始编辑多边形" onClick="editor.startEditPolygon()"/>
    <input type="button" class="button" value="结束编辑多边形" onClick="editor.closeEditPolygon()"/>
    <!--<input type="button" class="button" value="开始编辑圆" onClick="editor.startEditCircle()"/>
    <input type="button" class="button" value="结束编辑圆" onClick="editor.closeEditCircle()"/>-->

</div>
<script>

	var center = [113.981054,34.698033];
    var editorTool, mapObj = new AMap.Map("container", {
        resizeEnable: true,
        center: center,//地图中心点
        zoom: 13 //地图显示的缩放级别
    });
    //在地图上绘制折线
    var editor={};
/*    editor._line=(function(){
        var lineArr = [
            [116.368904, 39.913423],
            [116.382122, 39.901176],
            [116.387271, 39.912501],
            [116.388258, 39.904600]
        ];
        return new AMap.Polyline({
            map: map,
            path: lineArr,
            strokeColor: "#FF33FF",//线颜色
            strokeOpacity: 1,//线透明度
            strokeWeight: 3,//线宽
            strokeStyle: "solid"//线样式
        });
    })();*/
    editor._polygon=(function(){
        var arr = [ //构建多边形经纬度坐标数组
		 [center[0]-0.003,center[1]-0.001],
		[center[0]-0.003,center[1]-0.003],
		
       
		[center[0]+0.003,center[1]+0.001],
        [center[0]+0.003,center[1]+0.004],
        
        
        ]
        return new AMap.Polygon({
            map: mapObj,
            path: arr,
            strokeColor: "#0000ff",
            strokeOpacity: 1,
            strokeWeight: 1,
            fillColor: "#f5deb3",
            fillOpacity: 0.35
        });
    })();
 /*   editor._circle=(function(){
        var circle = new AMap.Circle({
            center: [116.433322, 39.900255],// 圆心位置
            radius: 1000, //半径
            strokeColor: "#F33", //线颜色
            strokeOpacity: 1, //线透明度
            strokeWeight: 3, //线粗细度
            fillColor: "#ee2200", //填充颜色
            fillOpacity: 0.35//填充透明度
        });
        circle.setMap(map);
        return circle;
    })();*/
    mapObj.setFitView();
//    editor._lineEditor= new AMap.PolyEditor(map, editor._line);
    editor._polygonEditor= new AMap.PolyEditor(mapObj, editor._polygon);
//    editor._circleEditor= new AMap.CircleEditor(map, editor._circle);

//    editor.startEditLine=function(){
//        editor._lineEditor.open();
//    }
//    editor.closeEditLine=function(){
//        editor._lineEditor.close();
//    }



    editor.startEditPolygon=function(){
        editor._polygonEditor.open();
    }
	var data = [];
	var dataArray = [];
    editor.closeEditPolygon=function(){
		data = [];
		dataArray = [];
		var orgionPoints =  editor._polygon.F.path;
		for(var i=0;i<  orgionPoints.length;i++){
			data[i] = {};
			dataArray[i] = [];
			var curPoint= orgionPoints[i];
			data[i].lat = curPoint.lat;
			data[i].lng = curPoint.lng;
			dataArray[i][0] = curPoint.lng;
			dataArray[i][1] = curPoint.lat;

		}
		editor._polygonEditor.close();
		alert(JSON.stringify( data ));
		alert(JSON.stringify( dataArray ));

            var fso = new ActiveXObject("Scripting.FileSystemObject");
            var s = fso.CreateTextFile("d:\a.txt",2,true);
            s.WriteLine(JSON.stringify( dataArray ));
            s.Close();

		//var fso=new ActiveXObject(Scripting.FileSystemObject);
        //var f=fso.createtextfile("C:\a.txt",2,true); 
		//f.writeLine(JSON.stringify( dataArray )); 
		//f.close(); 
    }
	
	

//    editor.startEditCircle=function(){
//        editor._circleEditor.open();
//    }
//    editor.closeEditCircle=function(){
//        editor._circleEditor.close();
//    }

    //加载网格化图层
    function loadGridLayer(){
        var polygon = null;
        var polygons = [];
        for(var i=0;i<boundles.length;i++){
            var boundle = boundles[i];
			alert(i);
            polygons.push(new AMap.Polygon({
                cursor:boundle.option.cursor,
                aaa027:boundle.option.aaa027,
                map: mapObj,
                name:boundle.option.name,
                path: boundle.boundle,//设置多边形边界路径
                strokeColor: boundle.option.strokeColor, //线颜色
                strokeOpacity: boundle.option.strokeOpacity, //线透明度
                strokeWeight: boundle.option.strokeWeight, //线宽
                fillColor: boundle.option.fillColor, //填充色
                fillOpacity:boundle.option.fillOpacity//填充透明度
            }));

        }

    }

	$(function () {
	  loadGridLayer();
	});

</script>
</body>
</html>