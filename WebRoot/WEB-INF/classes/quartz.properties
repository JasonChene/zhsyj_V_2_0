#===============================================================         
#Configure Main Scheduler Properties   设置调度器的实例名(instanceName) 和实例 ID (instanceId)。      
#ReportScheduler为你的job类
#===============================================================    

org.quartz.scheduler.instanceName = LogArchiveScheduler
org.quartz.scheduler.instanceId = LogArchive  

#===============================================================         
#Configure ThreadPool  配置线程池属：数量，优先级，实现了 org.quartz.spi.ThreadPool 接口的类的全限名称。Quartz 自带的线程池实现类是 org.quartz.smpl.SimpleThreadPool，它能够满足大多数用户的需求    
#===============================================================     

org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount = 5
org.quartz.threadPool.threadPriority = 5 

#===============================================================         
#Configure Plugins 配置quartz_jobs.xml插件
#JobInitializationPlugin 找寻 quartz_jobs.xml 来获得声明的 Job 信息        
#=============================================================== 
#1.8版本及以后版本=======
#org.quartz.plugin.triggHistory.class = org.quartz.plugins.history.LoggingJobHistoryPlugin
#org.quartz.plugin.jobInitializer.class = org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin
#设置XML插件的位置和文件名，默认在src下，编译后会放到classes下
#org.quartz.plugin.jobInitializer.fileNames = quartz_jobs.xml 
#org.quartz.plugin.jobInitializer.failOnFileNotFound = true
#自动扫描任务单并发现改动的时间间隔,单位为秒
#org.quartz.plugin.jobInitializer.scanInterval = 10 
#org.quartz.plugin.jobInitializer.wrapInUserTransaction = false


#1.8之前的版本=====================
#org.quartz.plugin.triggHistory.class = org.quartz.plugins.history.LoggingJobHistoryPlugin  
#org.quartz.plugin.jobInitializer.class = org.quartz.plugins.xml.JobInitializationPlugin  
#org.quartz.plugin.jobInitializer.fileNames = quartz_jobs.xml
#org.quartz.plugin.jobInitializer.failOnFileNotFound = true  
#org.quartz.plugin.jobInitializer.scanInterval = 120
#org.quartz.plugin.jobInitializer.wrapInUserTransaction = false

